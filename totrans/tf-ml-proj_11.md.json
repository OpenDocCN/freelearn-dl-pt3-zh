["```\nkaggle datasets download -d retailrocket/ecommerce-dataset\n```", "```\ndsroot = os.path.join(os.path.expanduser('~'),\n                      'datasets',\n                      'kaggle-retailrocket')\nos.listdir(dsroot)\n```", "```\nevents = pd.read_csv(os.path.join(dsroot,'events.csv'))\nprint('Event data\\n',events.head())\n```", "```\nEvent data\n        timestamp  visitorid event  itemid  transactionid\n0  1433221332117     257597  view  355908            NaN\n1  1433224214164     992329  view  248676            NaN\n2  1433221999827     111016  view  318965            NaN\n3  1433221955914     483717  view  253185            NaN\n4  1433221337106     951259  view  367447            NaN\n```", "```\nprint('Unique counts:',events.nunique())\n```", "```\nUnique counts: timestamp        2750455\nvisitorid        1407580\nevent                  3\nitemid            235061\ntransactionid      17672\ndtype: int64\n```", "```\nprint('Kind of events:',events.event.unique())\n```", "```\nKind of events: ['view' 'addtocart' 'transaction']\n```", "```\nevents.event.replace(to_replace=dict(view=1, \n                                     addtocart=2, \n                                     transaction=3), \n                     inplace=True)\n```", "```\nevents.drop(['transactionid'],axis=1,inplace=True)\nevents.drop(['timestamp'],axis=1,inplace=True)\n```", "```\nevents = events.reindex(np.random.permutation(events.index))\n```", "```\nevents = events.sample(frac=1).reset_index(drop=True)\n```", "```\nsplit_1 = int(0.8 * len(events))\nsplit_2 = int(0.9 * len(events))\ntrain = events[:split_1]\nvalid = events[split_1:split_2]\ntest = events[split_2:]\nprint(train.head())\nprint(valid.head())\nprint(test.head())\n```", "```\n             timestamp  visitorid  event  itemid\n1621867  1431388649092     896963      1  264947\n1060311  1440610461477    1102098      1  431592\n114317   1433628249991    1241997      1  283584\n1658382  1431543289648     198153      1   97879\n2173151  1436211020113    1278262      1  218178\n             timestamp  visitorid  event  itemid\n1903213  1432567070061      85425      1  344338\n1722815  1431708672912    1085328      1   59691\n1388040  1442124865777    1366284      1  248032\n2669880  1438030300131     478634      1  388940\n1893864  1432416049191    1052918      1  328647\n             timestamp  visitorid  event  itemid\n1004940  1440383070554     193171      1   11565\n642906   1438664048047     704648      1  262522\n902126   1439869996568      10212      1   46971\n569976   1435624889084     753933      1   29489\n1517206  1430856529370     261457      1  154821\n```", "```\nn_visitors = events.visitorid.nunique()\nn_items = events.itemid.nunique()\n```", "```\nn_latent_factors = 5\n```", "```\nfrom tensorflow.keras.layers import Input, Embedding, Flatten\n```", "```\nitem_input = Input(shape=[1],name='Items')\n```", "```\nitem_embed = Embedding(n_items + 1,\n                           n_latent_factors, \n                           name='ItemsEmbedding')(item_input)\nitem_vec = Flatten(name='ItemsFlatten')(item_embed)\n```", "```\nvisitor_input = Input(shape=[1],name='Visitors')\nvisitor_embed = Embedding(n_visitors + 1,\n                          n_latent_factors,\n                          name='VisitorsEmbedding')(visitor_input)\nvisitor_vec = Flatten(name='VisitorsFlatten')(visitor_embed)\n```", "```\ndot_prod = keras.layers.dot([item_vec, visitor_vec],axes=[1,1],\n                             name='DotProduct') \n```", "```\nmodel = keras.Model([item_input, visitor_input], dot_prod)\nmodel.compile('adam', 'mse')\nmodel.summary()\n```", "```\n________________________\nLayer (type)                    Output Shape         Param #     Connected to                     \n================================================================================\nItems (InputLayer)              (None, 1)            0                                            \n________________________________________________________________________________\nVisitors (InputLayer)           (None, 1)            0                                            \n________________________________________________________________________________\nItemsEmbedding (Embedding)      (None, 1, 5)         1175310     Items[0][0]                      \n________________________________________________________________________________\nVisitorsEmbedding (Embedding)   (None, 1, 5)         7037905     Visitors[0][0]                   \n________________________________________________________________________________\nItemsFlatten (Flatten)          (None, 5)            0           ItemsEmbedding[0][0]             \n________________________________________________________________________________\nVisitorsFlatten (Flatten)       (None, 5)            0           VisitorsEmbedding[0][0]          \n________________________________________________________________________________\nDotProduct (Dot)                (None, 1)            0           ItemsFlatten[0][0]               \n                                                                 VisitorsFlatten[0][0]            \n================================================================================\nTotal params: 8,213,215\nTrainable params: 8,213,215\nNon-trainable params: 0\n________________________________________________________________________________\n```", "```\nkeras.utils.plot_model(model, \n                       to_file='model.png', \n                       show_shapes=True, \n                       show_layer_names=True)\nfrom IPython import display\ndisplay.display(display.Image('model.png'))\n```", "```\nmodel.fit([train.visitorid, train.itemid], train.event, epochs=50)\nscore = model.evaluate([test.visitorid, test.itemid], test.event)\nprint('mean squared error:', score)\n```", "```\nn_lf_visitor = 5\nn_lf_item = 5\n```", "```\nitem_input = Input(shape=[1],name='Items')\nitem_embed = Embedding(n_items + 1,\n                           n_lf_visitor, \n                           name='ItemsEmbedding')(item_input)\nitem_vec = Flatten(name='ItemsFlatten')(item_embed)\n\nvisitor_input = Input(shape=[1],name='Visitors')\nvisitor_embed = Embedding(n_visitors + 1, \n                              n_lf_item,\n                              name='VisitorsEmbedding')(visitor_input)\nvisitor_vec = Flatten(name='VisitorsFlatten')(visitor_embed)\n```", "```\nconcat = keras.layers.concatenate([item_vec, visitor_vec], name='Concat')\nfc_1 = Dense(80,name='FC-1')(concat)\nfc_2 = Dense(40,name='FC-2')(fc_1)\nfc_3 = Dense(20,name='FC-3', activation='relu')(fc_2)\n\noutput = Dense(1, activation='relu',name='Output')(fc_3)\n```", "```\noptimizer = keras.optimizers.Adam(lr=0.001)\nmodel = keras.Model([item_input, visitor_input], output)\nmodel.compile(optimizer=optimizer,loss= 'mse')\n```", "```\nmodel.fit([train.visitorid, train.itemid], train.event, epochs=50)\nscore = model.evaluate([test.visitorid, test.itemid], test.event)\nprint('mean squared error:', score)\n```", "```\n275611/275611 [==============================] - 4s 14us/step\nmean squared error: 0.05709125054560985\n```"]