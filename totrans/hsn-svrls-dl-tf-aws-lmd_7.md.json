["```\nfunction:\n    branch:\n        handler: index.handlerBranch\n    map:\n        handler: index.handlerMap\n    reduce:\n        handler: index.handlerReduce\n```", "```\nplugins:    - serverless-step-functions\n    - serverless-pseudo-parameters\n```", "```\ndef handlerMap(event,context):\n    return event\n\ndef handlerReduce(event,context):\n    return event\n\ndef handlerBranch(event,context):\n    return 'Hello world'\n```", "```\nserverless deploy\n```", "```\ncurl https://dns1519ilj.execute-api.us-east-1.amazonaws.com/dev/startFunction\n```", "```\nprovider:\n  name: aws\n  region: us-east-1\n  runtime: python3.6\n  memorySize: 1536\n  timeout: 30\n  iamRoleStatements:\n    - Effect: \"Allow\"\n       Action:\n         - \"s3:ListBucket\"\n       Resource:\n         - arn:aws:s3:::serverlessdeeplearning\n    - Effect: \"Allow\"\n       Action:\n         - \"s3:GetObject\"\n       Resource:\n         - arn:aws:s3:::serverlessdeeplearning/*\n```", "```\nfunctions:\n  main:\n    handler: index.handler\n  map:\n    handler: index.map\n  reduce:\n    handler: index.reduce\n```", "```\nstepFunctions:\n  stateMachines:\n    DeepLearningWorkflow:\n      events:\n        - http:\n            path: gofunction\n            method: POST\n      name: DeepLearningWorkflow\n      definition:\n        StartAt: StartStepF\n        States:\n          StartStepF:\n            Type: Task\n            Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-map\n            Next: Parallel\n          Parallel:\n            Type: Parallel\n            Next: EndStepF\n            Branches:\n              - StartAt: Branch1\n                States:\n                  Branch1:\n                    Type: Task\n                    Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-main\n                    InputPath: '$.branch1.url'\n                    ResultPath: '$.res'\n                    End: True\n              - StartAt: Branch2\n                States:\n                  Branch2:\n                    Type: Task\n                    Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-main\n                    InputPath: '$.branch2.url'\n                    ResultPath: '$.res'\n                    End: True\n              - StartAt: Branch3\n                States:\n                  Branch3:\n                    Type: Task\n                    Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-main\n                    InputPath: '$.branch3.url'\n                    ResultPath: '$.res'\n                    End: True\n          EndStepF:\n            Type: Task\n            Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-reduce\n            End: true\n```", "```\nplugins:\n  - serverless-step-functions\n  - serverless-pseudo-parameters\n```", "```\ndef map(event, context):\n    dictMap = {}\n    dictMap['branch1'] = {'url':event[0]}\n    dictMap['branch2'] = {'url':event[1]}\n    dictMap['branch3'] = {'url':event[2]}\n    return dictMap\n\ndef reduce(event, context):\n    vecRes = []\n    for res in event:\n        vecRes.append(res['res'])\n    return vecRes\n```", "```\nserverless deploy\n```"]