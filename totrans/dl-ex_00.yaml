- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book will start off by introducing the foundations of machine learning,
    what makes learning visible, demonstrating the traditional machine learning techniques
    with some examples and eventually deep learning. You will then move to creating
    machine learning models that will eventually lead you to neural networks. You
    will get familiar with the basics of deep learning and explore various tools that
    enable deep learning in a powerful yet user-friendly manner. With a very low starting
    point, this book will enable a regular developer to get hands-on experience with
    deep learning. You will learn all the essentials needed to explore and understand
    what deep learning is and will perform deep learning tasks first-hand. Also, we
    will be using one of the most widely used deep learning frameworks. TensorFlow
    has big community support that is growing day by day, which makes it a good option
    for building your complex deep learning applications.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is a starting point for those who are keen on knowing about deep learning
    and implementing it but do not have an extensive background in machine learning,
    complex statistics, and linear algebra.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](c6be0d67-2ba9-45ac-b6dd-116518853f42.xhtml), *Data science - Bird''s-eye
    view*, explains that data science or machine learning is the process of giving
    the machines the ability to learn from a dataset without being told or programmed.
    For instance, it will be extremely hard to write a program that takes a hand-written
    digit as an input image and outputs a value from 0-9 according to the number that''s
    written in this image. The same applies to the task of classifying incoming emails
    as spam or non-spam. To solve such tasks, data scientists uses learning methods
    and tools from the field of data science or machine learning to teach the computer
    how to automatically recognize digits by giving it some explanatory features that
    can distinguish each digit from another. The same for the spam/non-spam problem,
    instead of using regular expressions and writing hundred of rules to classify
    the incoming emails, we can teach the computer through specific learning algorithms
    how to distinguish between spam and non-spam emails.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](6e292a27-8ff3-4d9c-9186-433455cb380c.xhtml), *Data Modeling in
    Action - The Titanic Example*, linear models are the basic learning algorithms
    in the field of data science. Understanding how a linear model works is crucial
    in your journey of learning data science because it''s the basic building block
    for most of the sophisticated learning algorithms out there, including neural
    networks.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](171e9b02-5ed8-4635-85b0-9d46eddbd198.xhtml), *Feature Engineering
    and Model Complexity – Titanic Example Revisited*, covers model complexity and
    assessment. This is an important towards building a successful data science system.
    There are lots of tools that you can use to assess and choose your model. In this
    chapter, we are going to address some of tools that can help you to increase the
    value of your data by adding more descriptive features and extracting meaningful
    information from existing ones. We are also going to address other tools related
    to optimal number features and learn why it''s a problem to have a large number
    of features and fewer training samples/observations.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](c1132ef7-e238-4318-a227-a23d67005917.xhtml), *Get Up and Running
    with TensorFlow*, gives an overview of one of the most widely used deep learning
    frameworks. TensorFlow has big community support that is growing day by day, which
    makes it a good option for building your complex deep learning applications'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](8faa1d8b-609c-437a-829e-42bf170e2efc.xhtml), *Tensorflow in Action
    - Some Basic Examples*, will explain the main computational concept behind TensorFlow,
    which is the computational graph model, and demonstrate how to get you on track
    by implementing linear regression and logistic regression.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](4ea31f54-ffc5-46fc-9b0f-86427c80868f.xhtml), *Deep Feed-forward
    Neural Networks - Implementing Digit Classification*, explains that a **feed-forward
    neural network** (**FNN**) is a special type of neural network wherein links/connections
    between neurons do not form a cycle. As such, it is different from other architectures
    in a neural network that we will get to study later on in this book (recurrent-type
    neural networks). The FNN is a widely used architecture and it was the first and
    simplest type of neural network. In this chapter, we will go through the architecture
    of a typical ;FNN, and we will be using the TensorFlow library for this. After
    covering these concepts, we will give a practical example of digit classification.
    The question of this example is, *Given a set of images that contain handwritten
    digits, how can you classify these images into 10 different classes (0-9)*?'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](fa1fdcb0-1678-480f-80e2-6169a65381ab.xhtml), *Introduction to Convolutional
    Neural Networks*, explains that in data science, a **convolutional neural network** (**CNN**)
    is specific kind of deep learning architecture that uses the convolution operation
    to extract relevant explanatory features for the input image. CNN layers are connected
    as an FNN while using this convolution operation to mimic how the human brain
    functions when trying to recognize objects. Individual cortical neurons respond
    to stimuli in a restricted region of space known as the receptive field. In particular,
    biomedical imaging problems could be challenge sometimes but in this chapter,
    we''ll see how to use a CNN in order to discover patterns in this image.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](89600395-7795-4ab8-859a-28ff4a80bbe4.xhtml), *Object Detection
    – CIFAR-10 Example*, covers the basics and the intuition/motivation behind CNNs,
    before demonstrating this on one of the most popular datasets available for object
    detection. We''ll also see how the initial layers of the CNN get very basic features
    about our objects, but the final convolutional layers will get more semantic-level
    features that are built up from those basic features in the first layers.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](ac080e92-e53a-4d4c-af7b-7d2c56b90d51.xhtml), *Object Detection
    – Transfer Learning with CNNs*, explains that **Transfer learning** (**TL**) is
    a research problem in data science that is mainly concerned with persisting knowledge
    acquired during solving a specific task and using this acquired knowledge to solve
    another different but similar task. In this chapter, we will demonstrate one of
    the modern practices and common themes used in the field of data science with
    TL. The idea here is how to get the help from domains with very large datasets
    to domains that have smaller datasets. Finally, we will revisit our object detection
    example of CIFAR-10 and try to reduce both the training time and performance error
    via TL.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](da721487-236c-4027-8f3e-4cf1ae393559.xhtml), *Recurrent-Type Neural
    Networks - Language Modeling*, explains that **Recurrent neural networks** (**RNNs**)
    are a class of deep learning architectures that are widely used for natural language
    processing. This set of architectures enables us to provide contextual information
    for current predictions and also have specific architecture that deals with long-term
    dependencies in any input sequence. In this chapter, we''ll demonstrate how to
    make a sequence-to-sequence model, which will be useful in many applications in
    NLP. We will demonstrate these concepts by building a character-level language
    model and see how our model generates sentences similar to original input sequences.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](0a5230db-2991-4156-835e-d32172124843.xhtml), *Representation Learning
    - Implementing Word Embeddings*, explains that machine learning is a science that
    is mainly based on statistics and linear algebra. Applying matrix operations is
    very common among most machine learning or deep learning architectures because
    of backpropagation. This is the main reason deep learning, or machine learning
    in general, accepts only real-valued quantities as input. This fact contradicts
    many applications, such as machine translation, sentiment analysis, and so on;
    they have text as an input. So, in order to use deep learning for this application,
    we need to have it in the form that deep learning accepts! In this chapter, we
    are going to introduce the field of representation learning, which is a way to
    learn a real-valued representation from text while preserving the semantics of
    the actual text. For example, the representation of love should be very close
    to the representation of adore because they are used in very similar contexts.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12](1ab74bb7-e546-4872-9fe1-9e0e99fdc15f.xhtml), *Neural Sentiment
    Analysis*, addresses one of the hot and trendy applications in natural language
    processing, which is called sentiment analysis. Most people nowadays express their
    opinions about something through social media platforms, and making use of this
    vast amount of text to keep track of customer satisfaction about something is
    very crucial for companies or even governments.'
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we are going to use RNNs to build a sentiment analysis solution.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 13](bb259608-06da-4d50-bd05-c71ef2780334.xhtml), *Autoencoders – Feature
    Extraction and Denoising*, explains that an autoencoder network is nowadays one
    of the widely used deep learning architectures. It''s mainly used for unsupervised
    learning of efficient decoding tasks. It can also be used for dimensionality reduction
    by learning an encoding or a representation for a specific dataset. Using autoencoders
    in this chapter, we''ll show how to denoise your dataset by constructing another
    dataset with the same dimensions but less noise. To use this concept in practice,
    we will extract the important features from the MNIST dataset and try to see how
    the performance will be significantly enhanced by this.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 14](b17d26d4-2b6d-4f89-8e11-bf6988042de2.xhtml), *Generative Adversarial
    Networks*, covers **Generative Adversarial Networks** (**GANs**). They are deep
    neural net architectures that consist of two networks pitted against each other
    (hence the name adversarial). GANs were introduced in a paper ([https://arxiv.org/abs/1406.2661](https://arxiv.org/abs/1406.2661))
    by Ian Goodfellow and other researchers, including Yoshua Bengio, at the University
    of Montreal in 2014\. Referring to GANs, Facebook''s AI research director, Yann
    LeCun, called **adversarial training** the most interesting idea in the last 10
    years in machine learning. The potential of GANs is huge, because they can learn
    to mimic any distribution of data. That is, GANs can be taught to create worlds
    eerily similar to our own in any domain: images, music, speech, or prose. They
    are robot artists in a sense, and their output is impressive ([https://www.nytimes.com/2017/08/14/arts/design/google-how-ai-creates-new-music-and-new-artists-project-magenta.html](https://www.nytimes.com/2017/08/14/arts/design/google-how-ai-creates-new-music-and-new-artists-project-magenta.html))—and
    poignant too.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 15](a1323155-0162-437b-bf0b-7395d4a04556.xhtml), *Face Generation
    and Handling Missing Labels*, shows that the list of interesting applications
    that we can use GANs for is endless. In this chapter, we are going to demonstrate
    another promising application of GANs, which is face generation based on the CelebA
    database. We''ll also demonstrate how to use GANs for semi-supervised learning
    setups where we''ve got a poorly labeled dataset with some missing labels.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Appendix](fa5274ee-dd22-434a-89ac-ffc913249ced.xhtml), *Implementing Fish
    Recognition*, includes entire piece of code of fish recognition example.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Inform the reader of the things that they need to know before they start, and
    spell out what knowledge you are assuming.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Any additional installation instructions and information they need for getting
    set up.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packtpub.com](http://www.packtpub.com/support).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the SUPPORT tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Deep-Learning-By-Example](https://github.com/PacktPublishing/Deep-Learning-By-Example).
    We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Download the color images
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [http://www.packtpub.com/sites/default/files/downloads/DeepLearningByExample_ColorImages.pdf](http://www.packtpub.com/sites/default/files/downloads/DeepLearningByExample_ColorImages.pdf).'
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "Mount the downloaded `WebStorm-10*.dmg` disk image file as
    another disk in your system."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "Select System info from the Administration panel."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: Email `feedback@packtpub.com` and mention the book title
    in the subject of your message. If you have questions about any aspect of this
    book, please email us at `questions@packtpub.com`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the Internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at `copyright@packtpub.com` with a
    link to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com/).'
  prefs: []
  type: TYPE_NORMAL
- en: Reviews
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  prefs: []
  type: TYPE_NORMAL
- en: For more information about Packt, please visit [packtpub.com](https://www.packtpub.com/).
  prefs: []
  type: TYPE_NORMAL
