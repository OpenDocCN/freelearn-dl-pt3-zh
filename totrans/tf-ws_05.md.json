["```\nfrom tensorflow.keras.layers import Dense\nDense(1, activation='sigmoid')\n```", "```\nfrom tensorflow.keras.losses import BinaryCrossentropy\nbce = BinaryCrossentropy()\n```", "```\n    import pandas as pd\n    ```", "```\n    train_url = 'https://raw.githubusercontent.com/PacktWorkshops'\\\n                '/The-TensorFlow-Workshop/master/Chapter05'\\\n                '/dataset/dota2Train.csv'\n    ```", "```\n    X_train = pd.read_csv(train_url, header=None)\n    X_train.head()\n    ```", "```\n    y_train = X_train.pop(0)\n    ```", "```\n    y_train = y_train.replace(-1,0)\n    y_train.head()\n    ```", "```\n    test_url = 'https://raw.githubusercontent.com/PacktWorkshops'\\\n               '/The-TensorFlow-Workshop/master/Chapter05/dataset'\\\n               '/dota2Test.csv'\n    ```", "```\n    X_test = pd.read_csv(test_url, header=None)\n    X_test.head()\n    ```", "```\n    y_test = X_test.pop(0)\n    ```", "```\n    y_test = y_test.replace(-1,0)\n    y_test.head()\n    ```", "```\n    import tensorflow as tf\n    ```", "```\n    tf.random.set_seed(8)\n    ```", "```\n    model = tf.keras.Sequential()\n    ```", "```\n    from tensorflow.keras.layers import Dense\n    ```", "```\n    fc1 = Dense(512, input_shape=(116,), activation='relu')\n    ```", "```\n    fc2 = Dense(512, activation='relu')\n    ```", "```\n    fc3 = Dense(128, activation='relu')\n    ```", "```\n    fc4 = Dense(128, activation='relu')\n    ```", "```\n    fc5 = Dense(1, activation='sigmoid')\n    ```", "```\n    model.add(fc1)\n    model.add(fc2)\n    model.add(fc3)\n    model.add(fc4)\n    model.add(fc5)\n    ```", "```\n    model.summary()\n    ```", "```\n    loss = tf.keras.losses.BinaryCrossentropy()\n    ```", "```\n    optimizer = tf.keras.optimizers.Adam(0.001)\n    ```", "```\n    model.compile(optimizer=optimizer, loss=loss)\n    ```", "```\n    model.fit(X_train, y_train, epochs=5)\n    ```", "```\n    preds = model.predict(X_test)\n    preds[:5]\n    ```", "```\n    y_test[:5]\n    ```", "```\nfrom tensorflow.keras.metrics import Accuracy\npreds = [1, 1, 1, 1, 0, 0]\ntarget = [1, 0, 1, 0, 1, 0]\nacc = Accuracy()\nacc.update_state(preds, target)\nacc.result().numpy()\n```", "```\n0.5\n```", "```\nfrom tensorflow.keras.metrics import Precision, Recall\npreds = [1, 1, 1, 1, 0, 0]\ntarget = [1, 0, 1, 0, 1, 0]\nprec = Precision()\nprec.update_state(preds, target)\nprint(f\"Precision: {prec.result().numpy()}\")\nrec = Recall()\nrec.update_state(preds, target)\nprint(f\"Recall: {rec.result().numpy()}\")\n```", "```\nfrom tensorflow.math import confusion_matrix\npreds = [1, 1, 1, 1, 0, 0]\ntarget = [1, 0, 1, 0, 1, 0]\nprint(confusion_matrix(target, preds))\n```", "```\n    import pandas as pd\n    ```", "```\n    train_url = 'https://raw.githubusercontent.com/PacktWorkshops'\\\n                '/The-TensorFlow-Workshop/master/Chapter05/dataset'\\\n                '/dota2PreparedTrain.csv'\n    ```", "```\n    X_train = pd.read_csv(train_url, header=None)\n    ```", "```\n    y_train = X_train.pop(0)\n    ```", "```\n    test_url = 'https://raw.githubusercontent.com/PacktWorkshops'\\\n               '/The-TensorFlow-Workshop/master/Chapter05/dataset'\\\n               '/dota2PreparedTest.csv'\n    ```", "```\n    X_test = pd.read_csv(test_url, header=None)\n    ```", "```\n    y_test = X_test.pop(0)\n    ```", "```\n    import tensorflow as tf\n    from tensorflow.keras.utils import get_file\n    ```", "```\n    model_url = 'https://github.com/PacktWorkshops'\\\n                '/The-TensorFlow-Workshop/blob/master/Chapter05'\\\n                'model/exercise5_01_model.h5?raw=true'\n    ```", "```\n    model_path = get_file('exercise5_01_model.h5', model_url)\n    ```", "```\n    model = tf.keras.models.load_model(model_path)\n    ```", "```\n    model.summary()\n    ```", "```\n    preds_proba = model.predict(X_test)\n    preds_proba[:5]\n    ```", "```\n    preds = preds_proba >= 0.5\n    preds[:5]\n    ```", "```\n    from tensorflow.keras.metrics import Accuracy, Precision, Recall\n    ```", "```\n    acc = Accuracy()\n    prec = Precision()\n    rec = Recall()\n    ```", "```\n    acc.update_state(preds, y_test)\n    acc_results = acc.result().numpy()\n    acc_results\n    ```", "```\n    0.59650314\n    ```", "```\n    prec.update_state(preds, y_test)\n    prec_results = prec.result().numpy()\n    prec_results\n    ```", "```\n    0.59578335\n    ```", "```\n    rec.update_state(preds, y_test)\n    rec_results = rec.result().numpy()\n    rec_results\n    ```", "```\n    0.6294163\n    ```", "```\n    f1 = 2*(prec_results * rec_results) / (prec_results + rec_results)\n    f1\n    ```", "```\n    0.6121381493171637\n    ```", "```\nfrom tensorflow.keras.losses import CategoricalCrossentropy, \n                                    SparseCategoricalCrossentropy\ncce = CategoricalCrossentropy()\nscce = SparseCategoricalCrossentropy()\n```", "```\nimport numpy as np\npreds_proba = np.array([0.54, 0.16, 0.09, 0.15, 0.06])\n```", "```\npreds_proba.argmax()\n```", "```\n0\n```", "```\n    import pandas as pd\n    ```", "```\n    train_url = 'https://raw.githubusercontent.com/PacktWorkshops'\\\n                '/The-TensorFlow-Workshop/master/Chapter05'\\\n                '/dataset/shuttle.trn'\n    ```", "```\n    X_train = pd.read_table(train_url, header=None, sep=' ')\n    X_train.head()\n    ```", "```\n    y_train = X_train.pop(9)\n    ```", "```\n    test_url = 'https://raw.githubusercontent.com/PacktWorkshops'\\\n               '/The-TensorFlow-Workshop/master/Chapter05/dataset'\\\n               '/shuttle.tst'\n    ```", "```\n    X_test = pd.read_table(test_url, header=None, sep=' ')\n    X_test.head()\n    ```", "```\n    y_test = X_test.pop(9)\n    ```", "```\n    import tensorflow as tf\n    ```", "```\n    tf.random.set_seed(8)\n    ```", "```\n    model = tf.keras.Sequential()\n    ```", "```\n    from tensorflow.keras.layers import Dense\n    ```", "```\n    fc1 = Dense(512, input_shape=(9,), activation='relu')\n    ```", "```\n    fc2 = Dense(512, activation='relu')\n    ```", "```\n    fc3 = Dense(128, activation='relu')\n    ```", "```\n    fc4 = Dense(128, activation='relu')\n    ```", "```\n    fc5 = Dense(8, activation='softmax')\n    ```", "```\n    model.add(fc1)\n    model.add(fc2)\n    model.add(fc3)\n    model.add(fc4)\n    model.add(fc5)\n    ```", "```\n    model.summary()\n    ```", "```\n    loss = tf.keras.losses.SparseCategoricalCrossentropy()\n    ```", "```\n    optimizer = tf.keras.optimizers.Adam(0.001)\n    ```", "```\n    model.compile(optimizer=optimizer, loss=loss, \\\n                  metrics=['accuracy'])\n    ```", "```\n    model.fit(X_train, y_train, epochs=5)\n    ```", "```\n    model.evaluate(X_test, y_test)\n    ```", "```\nfrom tensorflow.keras.layers import Dense\nDense(3, activation='sigmoid')\n```", "```\nfrom tensorflow.keras.losses import BinaryCrossentropy\nbce = BinaryCrossentropy()\n```"]